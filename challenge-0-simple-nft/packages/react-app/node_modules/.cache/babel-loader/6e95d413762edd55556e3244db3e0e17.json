{"ast":null,"code":"var _jsxFileName = \"/Users/nsd/Documents/Dev/SpeedRunEthereum/challenge-0-simple-nft/packages/react-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport { useBalance, useContractLoader, useContractReader, useGasPrice, useOnBlock, useUserProviderAndSigner } from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\"; //import Torus from \"@toruslabs/torus-embed\"\n\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Address, AddressInput, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useContractConfig } from \"./hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projectId = \"2GajDLTC6y04qsYsoDRq9nGmWwK\";\nconst projectSecret = \"48c62c6b3f82d2ecfa2cbe4c90f97037\";\nconst projectIdAndSecret = `${projectId}:${projectSecret}`;\n\nconst {\n  BufferList\n} = require(\"bl\");\n\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({\n  host: \"ipfs.infura.io\",\n  port: \"5001\",\n  protocol: \"https\",\n  headers: {\n    authorization: `Basic ${Buffer.from(projectIdAndSecret).toString(\"base64\")}`\n  }\n});\n\nconst {\n  ethers\n} = require(\"ethers\");\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n/// üì° What chain are your contracts deployed to?\n\n\nconst targetNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n// üò¨ Sorry for all the console logging\n\nconst DEBUG = true;\nconst NETWORKCHECK = true; // EXAMPLE STARTING JSON:\n\nconst STARTING_JSON = {\n  description: \"It's actually a bison?\",\n  external_url: \"https://austingriffith.com/portfolio/paintings/\",\n  // <-- this can link to a page for the specific file too\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  name: \"Buffalo\",\n  attributes: [{\n    trait_type: \"BackgroundColor\",\n    value: \"green\"\n  }, {\n    trait_type: \"Eyes\",\n    value: \"googly\"\n  }]\n}; // helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\n\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path);\n    if (!file.content) continue;\n    const content = new BufferList();\n\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n\n    console.log(content);\n    return content;\n  }\n}; // üõ∞ providers\n\n\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\"); // const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n\nconst scaffoldEthProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\") : null;\nconst poktMainnetProvider = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\") : null;\nconst mainnetInfura = navigator.onLine ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID) : null; // ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// üè† Your local provider is usually pointed at your local blockchain\n\nconst localProviderUrl = targetNetwork.rpcUrl; // as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\n\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv); // üî≠ block explorer URL\n\nconst blockExplorer = targetNetwork.blockExplorer; // Coinbase walletLink init\n\nconst walletLink = new WalletLink({\n  appName: \"coinbase\"\n}); // WalletLink provider\n\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n/* Web3 modal helps us \"connect\" external wallets: */\n\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\",\n  // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true,\n  // optional\n  theme: \"light\",\n  // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider,\n      // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n          // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\" // xDai\n\n        }\n      }\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\"\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\"\n      }\n    },\n    fortmatic: {\n      package: Fortmatic,\n      // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\" // required\n\n      }\n    },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\"\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      }\n    },\n    authereum: {\n      package: Authereum // required\n\n    }\n  }\n});\n\nfunction App() {\n  _s();\n\n  const mainnetProvider = poktMainnetProvider && poktMainnetProvider._isProvider ? poktMainnetProvider : scaffoldEthProvider && scaffoldEthProvider._network ? scaffoldEthProvider : mainnetInfura;\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n\n\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n\n  const gasPrice = useGasPrice(targetNetwork, \"fast\"); // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n\n    getAddress();\n  }, [userSigner]); // You can warn the user if you would like them to be on a specific network\n\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId = userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId; // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n  // The transactor wraps transactions and provides notificiations\n\n  const tx = Transactor(userSigner, gasPrice); // Faucet Tx can be used to send funds from the faucet\n\n  const faucetTx = Transactor(localProvider, gasPrice); // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n\n  const yourLocalBalance = useBalance(localProvider, address); // Just plug in different üõ∞ providers to get your balance on different chains:\n\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n  const contractConfig = useContractConfig(); // Load in your local üìù contract and read a value from it:\n\n  const readContracts = useContractLoader(localProvider, contractConfig); // If you want to make üîê write transactions to your contracts, use the userSigner:\n\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId); // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig); // If you want to call a function on a new block\n\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  }); // Then read your DAI balance like:\n\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\"0x34aA3F359A9D614239015126635CE7732c18fDF3\"]); // keep track of a variable from the contract in the local React state:\n\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  console.log(\"ü§ó balance:\", balance); // üìü Listen for broadcast events\n\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  console.log(\"üìü Transfer events:\", transferEvents); //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      const collectibleUpdate = [];\n\n      for (let tokenIndex = 0; tokenIndex < balance; tokenIndex++) {\n        try {\n          console.log(\"GEtting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex);\n          console.log(\"tokenId\", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          console.log(\"tokenURI\", tokenURI);\n          const ipfsHash = tokenURI.replace(\"https://ipfs.io/ipfs/\", \"\");\n          console.log(\"ipfsHash\", ipfsHash);\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString());\n            console.log(\"jsonManifest\", jsonManifest);\n            collectibleUpdate.push({\n              id: tokenId,\n              uri: tokenURI,\n              owner: address,\n              ...jsonManifest\n            });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n\n      setYourCollectibles(collectibleUpdate);\n    };\n\n    updateYourCollectibles();\n  }, [address, yourBalance]);\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n\n  useEffect(() => {\n    if (DEBUG && mainnetProvider && address && selectedChainId && yourLocalBalance && yourMainnetBalance && readContracts && writeContracts && mainnetContracts) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [mainnetProvider, address, selectedChainId, yourLocalBalance, yourMainnetBalance, readContracts, writeContracts, mainnetContracts]);\n  let networkDisplay = \"\";\n\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network ID\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"chain id 1337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 26\n            }, this), \" for localhost and you need to change it to \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"31337\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 90\n            }, this), \" to work with HardHat.\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"(MetaMask -> Settings -> Networks -> Chain ID -> 31337)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this);\n    } else {\n      networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          zIndex: 2,\n          position: \"absolute\",\n          right: 0,\n          top: 60,\n          padding: 16\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          message: \"\\u26A0\\uFE0F Wrong Network\",\n          description: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"You have \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: networkSelected && networkSelected.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 26\n            }, this), \" selected and you need to be on\", \" \", /*#__PURE__*/_jsxDEV(Button, {\n              onClick: async () => {\n                const ethereum = window.ethereum;\n                const data = [{\n                  chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                  chainName: targetNetwork.name,\n                  nativeCurrency: targetNetwork.nativeCurrency,\n                  rpcUrls: [targetNetwork.rpcUrl],\n                  blockExplorerUrls: [targetNetwork.blockExplorer]\n                }];\n                console.log(\"data\", data);\n                let switchTx; // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n\n                try {\n                  switchTx = await ethereum.request({\n                    method: \"wallet_switchEthereumChain\",\n                    params: [{\n                      chainId: data[0].chainId\n                    }]\n                  });\n                } catch (switchError) {\n                  // not checking specific error code, because maybe we're not using MetaMask\n                  try {\n                    switchTx = await ethereum.request({\n                      method: \"wallet_addEthereumChain\",\n                      params: data\n                    });\n                  } catch (addError) {// handle \"add\" error\n                  }\n                }\n\n                if (switchTx) {\n                  console.log(switchTx);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: networkLocal && networkLocal.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this),\n          type: \"error\",\n          closable: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this);\n    }\n  } else {\n    networkDisplay = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        zIndex: -1,\n        position: \"absolute\",\n        right: 154,\n        top: 28,\n        padding: 16,\n        color: targetNetwork.color\n      },\n      children: targetNetwork.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this);\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    }); // Subscribe to session disconnection\n\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n  const [faucetClicked, setFaucetClicked] = useState(false);\n\n  if (!faucetClicked && localProvider && localProvider._network && localProvider._network.chainId == 31337 && yourLocalBalance && ethers.utils.formatEther(yourLocalBalance) <= 0) {\n    faucetHint = /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => {\n          faucetTx({\n            to: address,\n            value: ethers.utils.parseEther(\"0.01\")\n          });\n          setFaucetClicked(true);\n        },\n        children: \"\\uD83D\\uDCB0 Grab funds from the faucet \\u26FD\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this);\n  }\n\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\n  const [sending, setSending] = useState();\n  const [ipfsHash, setIpfsHash] = useState();\n  const [ipfsDownHash, setIpfsDownHash] = useState();\n  const [downloading, setDownloading] = useState();\n  const [ipfsContent, setIpfsContent] = useState();\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  const [minting, setMinting] = useState(false);\n  const [count, setCount] = useState(1); // the json for the nfts\n\n  const json = {\n    1: {\n      description: \"It's actually a bison?\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\",\n      // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n      name: \"Buffalo\",\n      attributes: [{\n        trait_type: \"BackgroundColor\",\n        value: \"green\"\n      }, {\n        trait_type: \"Eyes\",\n        value: \"googly\"\n      }, {\n        trait_type: \"Stamina\",\n        value: 42\n      }]\n    },\n    2: {\n      description: \"What is it so worried about?\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\",\n      // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/zebra.jpg\",\n      name: \"Zebra\",\n      attributes: [{\n        trait_type: \"BackgroundColor\",\n        value: \"blue\"\n      }, {\n        trait_type: \"Eyes\",\n        value: \"googly\"\n      }, {\n        trait_type: \"Stamina\",\n        value: 38\n      }]\n    },\n    3: {\n      description: \"What a horn!\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\",\n      // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/rhino.jpg\",\n      name: \"Rhino\",\n      attributes: [{\n        trait_type: \"BackgroundColor\",\n        value: \"pink\"\n      }, {\n        trait_type: \"Eyes\",\n        value: \"googly\"\n      }, {\n        trait_type: \"Stamina\",\n        value: 22\n      }]\n    },\n    4: {\n      description: \"Is that an underbyte?\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\",\n      // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/fish.jpg\",\n      name: \"Fish\",\n      attributes: [{\n        trait_type: \"BackgroundColor\",\n        value: \"blue\"\n      }, {\n        trait_type: \"Eyes\",\n        value: \"googly\"\n      }, {\n        trait_type: \"Stamina\",\n        value: 15\n      }]\n    },\n    5: {\n      description: \"So delicate.\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\",\n      // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/flamingo.jpg\",\n      name: \"Flamingo\",\n      attributes: [{\n        trait_type: \"BackgroundColor\",\n        value: \"black\"\n      }, {\n        trait_type: \"Eyes\",\n        value: \"googly\"\n      }, {\n        trait_type: \"Stamina\",\n        value: 6\n      }]\n    },\n    6: {\n      description: \"Raaaar!\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\",\n      // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/godzilla.jpg\",\n      name: \"Godzilla\",\n      attributes: [{\n        trait_type: \"BackgroundColor\",\n        value: \"orange\"\n      }, {\n        trait_type: \"Eyes\",\n        value: \"googly\"\n      }, {\n        trait_type: \"Stamina\",\n        value: 99\n      }]\n    }\n  };\n\n  const mintItem = async () => {\n    // upload to ipfs\n    const uploaded = await ipfs.add(JSON.stringify(json[count]));\n    setCount(count + 1);\n    console.log(\"Uploaded Hash: \", uploaded);\n    const result = tx(writeContracts && writeContracts.YourCollectible && writeContracts.YourCollectible.mintItem(address, uploaded.path), update => {\n      console.log(\"üì° Transaction Update:\", update);\n\n      if (update && (update.status === \"confirmed\" || update.status === 1)) {\n        console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n        console.log(\" ‚õΩÔ∏è \" + update.gasUsed + \"/\" + (update.gasLimit || update.gas) + \" @ \" + parseFloat(update.gasPrice) / 1000000000 + \" gwei\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 675,\n      columnNumber: 7\n    }, this), networkDisplay, /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        style: {\n          textAlign: \"center\"\n        },\n        selectedKeys: [route],\n        mode: \"horizontal\",\n        children: [/*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/\");\n            },\n            to: \"/\",\n            children: \"YourCollectibles\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this)\n        }, \"/\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/transfers\");\n            },\n            to: \"/transfers\",\n            children: \"Transfers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this)\n        }, \"/transfers\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/ipfsup\");\n            },\n            to: \"/ipfsup\",\n            children: \"IPFS Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)\n        }, \"/ipfsup\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/ipfsdown\");\n            },\n            to: \"/ipfsdown\",\n            children: \"IPFS Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 13\n          }, this)\n        }, \"/ipfsdown\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => {\n              setRoute(\"/debugcontracts\");\n            },\n            to: \"/debugcontracts\",\n            children: \"Debug Contracts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this)\n        }, \"/debugcontracts\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 640,\n              margin: \"auto\",\n              marginTop: 32,\n              paddingBottom: 32\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              disabled: minting,\n              shape: \"round\",\n              size: \"large\",\n              onClick: () => {\n                mintItem();\n              },\n              children: \"MINT NFT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 732,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 640,\n              margin: \"auto\",\n              marginTop: 32,\n              paddingBottom: 32\n            },\n            children: /*#__PURE__*/_jsxDEV(List, {\n              bordered: true,\n              dataSource: yourCollectibles,\n              renderItem: item => {\n                const id = item.id.toNumber();\n                return /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(Card, {\n                    title: /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          fontSize: 16,\n                          marginRight: 8\n                        },\n                        children: [\"#\", id]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 755,\n                        columnNumber: 29\n                      }, this), \" \", item.name]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 754,\n                      columnNumber: 27\n                    }, this),\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: item.image,\n                        style: {\n                          maxWidth: 150\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 760,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 759,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: item.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 762,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"owner:\", \" \", /*#__PURE__*/_jsxDEV(Address, {\n                      address: item.owner,\n                      ensProvider: mainnetProvider,\n                      blockExplorer: blockExplorer,\n                      fontSize: 16\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 767,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(AddressInput, {\n                      ensProvider: mainnetProvider,\n                      placeholder: \"transfer to address\",\n                      value: transferToAddresses[id],\n                      onChange: newValue => {\n                        const update = {};\n                        update[id] = newValue;\n                        setTransferToAddresses({ ...transferToAddresses,\n                          ...update\n                        });\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 773,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: () => {\n                        console.log(\"writeContracts\", writeContracts);\n                        tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\n                      },\n                      children: \"Transfer\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 783,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 23\n                  }, this)]\n                }, id + \"_\" + item.uri + \"_\" + item.owner, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 751,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/transfers\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 600,\n              margin: \"auto\",\n              marginTop: 32,\n              paddingBottom: 32\n            },\n            children: /*#__PURE__*/_jsxDEV(List, {\n              bordered: true,\n              dataSource: transferEvents,\n              renderItem: item => {\n                return /*#__PURE__*/_jsxDEV(List.Item, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: 16,\n                      marginRight: 8\n                    },\n                    children: [\"#\", item.args[2].toNumber()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 807,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Address, {\n                    address: item.args[0],\n                    ensProvider: mainnetProvider,\n                    fontSize: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 808,\n                    columnNumber: 23\n                  }, this), \" =>\", /*#__PURE__*/_jsxDEV(Address, {\n                    address: item.args[1],\n                    ensProvider: mainnetProvider,\n                    fontSize: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 23\n                  }, this)]\n                }, item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item.args[2].toNumber(), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 806,\n                  columnNumber: 21\n                }, this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ipfsup\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: 32,\n              width: 740,\n              margin: \"auto\",\n              textAlign: \"left\"\n            },\n            children: /*#__PURE__*/_jsxDEV(ReactJson, {\n              style: {\n                padding: 8\n              },\n              src: yourJSON,\n              theme: \"pop\",\n              enableClipboard: false,\n              onEdit: (edit, a) => {\n                setYourJSON(edit.updated_src);\n              },\n              onAdd: (add, a) => {\n                setYourJSON(add.updated_src);\n              },\n              onDelete: (del, a) => {\n                setYourJSON(del.updated_src);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: 8\n            },\n            loading: sending,\n            size: \"large\",\n            shape: \"round\",\n            type: \"primary\",\n            onClick: async () => {\n              console.log(\"UPLOADING...\", yourJSON);\n              setSending(true);\n              setIpfsHash();\n              const result = await ipfs.add(JSON.stringify(yourJSON)); // addToIPFS(JSON.stringify(yourJSON))\n\n              if (result && result.path) {\n                setIpfsHash(result.path);\n              }\n\n              setSending(false);\n              console.log(\"RESULT:\", result);\n            },\n            children: \"Upload to IPFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: 16,\n              paddingBottom: 150\n            },\n            children: ipfsHash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 817,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/ipfsdown\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              paddingTop: 32,\n              width: 740,\n              margin: \"auto\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              value: ipfsDownHash,\n              placeHolder: \"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\",\n              onChange: e => {\n                setIpfsDownHash(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            style: {\n              margin: 8\n            },\n            loading: sending,\n            size: \"large\",\n            shape: \"round\",\n            type: \"primary\",\n            onClick: async () => {\n              console.log(\"DOWNLOADING...\", ipfsDownHash);\n              setDownloading(true);\n              setIpfsContent();\n              const result = await getFromIPFS(ipfsDownHash); // addToIPFS(JSON.stringify(yourJSON))\n\n              if (result && result.toString) {\n                setIpfsContent(result.toString());\n              }\n\n              setDownloading(false);\n            },\n            children: \"Download from IPFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              padding: 16,\n              width: 500,\n              margin: \"auto\",\n              paddingBottom: 150\n            },\n            children: ipfsContent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 889,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/debugcontracts\",\n          children: /*#__PURE__*/_jsxDEV(Contract, {\n            name: \"YourCollectible\",\n            signer: userSigner,\n            provider: localProvider,\n            address: address,\n            blockExplorer: blockExplorer,\n            contractConfig: contractConfig\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 730,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"right\",\n        right: 0,\n        top: 0,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Account, {\n        address: address,\n        localProvider: localProvider,\n        userSigner: userSigner,\n        mainnetProvider: mainnetProvider,\n        price: price,\n        web3Modal: web3Modal,\n        loadWeb3Modal: loadWeb3Modal,\n        logoutOfWeb3Modal: logoutOfWeb3Modal,\n        blockExplorer: blockExplorer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 9\n      }, this), faucetHint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"fixed\",\n        textAlign: \"left\",\n        left: 0,\n        bottom: 20,\n        padding: 10\n      },\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          children: /*#__PURE__*/_jsxDEV(Ramp, {\n            price: price,\n            address: address,\n            networks: NETWORKS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 926,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 0.8\n          },\n          children: /*#__PURE__*/_jsxDEV(GasGauge, {\n            gasPrice: gasPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 8,\n          style: {\n            textAlign: \"center\",\n            opacity: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n            },\n            size: \"large\",\n            shape: \"round\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                marginRight: 8\n              },\n              role: \"img\",\n              \"aria-label\": \"support\",\n              children: \"\\uD83D\\uDCAC\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 940,\n              columnNumber: 15\n            }, this), \"Support\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 933,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        align: \"middle\",\n        gutter: [4, 4],\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children:\n          /*  if the local provider has a signer, let's show the faucet:  */\n          faucetAvailable ? /*#__PURE__*/_jsxDEV(Faucet, {\n            localProvider: localProvider,\n            price: price,\n            ensProvider: mainnetProvider\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 17\n          }, this) : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 923,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 673,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DBfJ3z+32mzWjhmJ06Oe0JqfaZ4=\", false, function () {\n  return [useExchangeEthPrice, useGasPrice, useUserProviderAndSigner, useBalance, useBalance, useContractConfig, useContractLoader, useContractLoader, useContractLoader, useOnBlock, useContractReader, useContractReader, useEventListener];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/nsd/Documents/Dev/SpeedRunEthereum/challenge-0-simple-nft/packages/react-app/src/App.jsx"],"names":["Portis","WalletConnectProvider","Alert","Button","Card","Col","Input","List","Menu","Row","Authereum","useBalance","useContractLoader","useContractReader","useGasPrice","useOnBlock","useUserProviderAndSigner","useExchangeEthPrice","useEventListener","Fortmatic","React","useCallback","useEffect","useState","ReactJson","BrowserRouter","Link","Route","Switch","WalletLink","Web3Modal","Account","Address","AddressInput","Contract","Faucet","GasGauge","Header","Ramp","ThemeSwitch","INFURA_ID","NETWORK","NETWORKS","Transactor","useContractConfig","projectId","projectSecret","projectIdAndSecret","BufferList","require","ipfsAPI","ipfs","host","port","protocol","headers","authorization","Buffer","from","toString","ethers","targetNetwork","localhost","DEBUG","NETWORKCHECK","STARTING_JSON","description","external_url","image","name","attributes","trait_type","value","getFromIPFS","hashToGet","file","get","console","log","path","content","chunk","append","scaffoldEthProvider","navigator","onLine","providers","StaticJsonRpcProvider","poktMainnetProvider","mainnetInfura","localProviderUrl","rpcUrl","localProviderUrlFromEnv","process","env","REACT_APP_PROVIDER","localProvider","blockExplorer","walletLink","appName","walletLinkProvider","makeWeb3Provider","web3Modal","network","cacheProvider","theme","providerOptions","walletconnect","package","options","bridge","infuraId","rpc","portis","display","logo","id","fortmatic","key","connector","provider","_options","enable","authereum","App","mainnetProvider","_isProvider","_network","injectedProvider","setInjectedProvider","address","setAddress","logoutOfWeb3Modal","clearCachedProvider","disconnect","setTimeout","window","location","reload","price","gasPrice","userProviderAndSigner","userSigner","signer","getAddress","newAddress","localChainId","chainId","selectedChainId","tx","faucetTx","yourLocalBalance","yourMainnetBalance","contractConfig","readContracts","writeContracts","mainnetContracts","_lastBlockNumber","myMainnetDAIBalance","balance","transferEvents","yourBalance","toNumber","yourCollectibles","setYourCollectibles","updateYourCollectibles","collectibleUpdate","tokenIndex","tokenId","YourCollectible","tokenOfOwnerByIndex","tokenURI","ipfsHash","replace","jsonManifestBuffer","jsonManifest","JSON","parse","push","uri","owner","e","utils","formatEther","networkDisplay","networkSelected","networkLocal","zIndex","position","right","top","padding","ethereum","data","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","switchTx","request","method","params","switchError","addError","color","loadWeb3Modal","connect","Web3Provider","on","code","reason","cachedProvider","route","setRoute","pathname","faucetHint","faucetAvailable","connection","indexOf","faucetClicked","setFaucetClicked","to","parseEther","yourJSON","setYourJSON","sending","setSending","setIpfsHash","ipfsDownHash","setIpfsDownHash","downloading","setDownloading","ipfsContent","setIpfsContent","transferToAddresses","setTransferToAddresses","minting","setMinting","count","setCount","json","mintItem","uploaded","add","stringify","result","update","status","hash","gasUsed","gasLimit","gas","parseFloat","textAlign","width","margin","marginTop","paddingBottom","item","fontSize","marginRight","maxWidth","newValue","transferFrom","args","blockNumber","paddingTop","edit","a","updated_src","del","target","left","bottom","opacity","open"],"mappings":"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","sourcesContent":["import Portis from \"@portis/web3\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { Alert, Button, Card, Col, Input, List, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport Authereum from \"authereum\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport Fortmatic from \"fortmatic\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport ReactJson from \"react-json-view\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Address, AddressInput, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport { useContractConfig } from \"./hooks\";\n\nconst projectId = \"2GajDLTC6y04qsYsoDRq9nGmWwK\";\nconst projectSecret = \"48c62c6b3f82d2ecfa2cbe4c90f97037\";\nconst projectIdAndSecret = `${projectId}:${projectSecret}`;\n\nconst { BufferList } = require(\"bl\");\nconst ipfsAPI = require(\"ipfs-http-client\");\n\nconst ipfs = ipfsAPI({\n  host: \"ipfs.infura.io\",\n  port: \"5001\",\n  protocol: \"https\",\n  headers: { authorization: `Basic ${Buffer.from(projectIdAndSecret).toString(\"base64\")}` },\n});\n\nconst { ethers } = require(\"ethers\");\n\n/*\n    Welcome to üèó scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    üåè EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// üì° What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.localhost; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// üò¨ Sorry for all the console logging\nconst DEBUG = true;\nconst NETWORKCHECK = true;\n\n// EXAMPLE STARTING JSON:\nconst STARTING_JSON = {\n  description: \"It's actually a bison?\",\n  external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n  image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n  name: \"Buffalo\",\n  attributes: [\n    {\n      trait_type: \"BackgroundColor\",\n      value: \"green\",\n    },\n    {\n      trait_type: \"Eyes\",\n      value: \"googly\",\n    },\n  ],\n};\n\n// helper function to \"Get\" from IPFS\n// you usually go content.toString() after this...\nconst getFromIPFS = async hashToGet => {\n  for await (const file of ipfs.get(hashToGet)) {\n    console.log(file.path);\n    if (!file.content) continue;\n    const content = new BufferList();\n    for await (const chunk of file.content) {\n      content.append(chunk);\n    }\n    console.log(content);\n    return content;\n  }\n};\n\n// üõ∞ providers\nif (DEBUG) console.log(\"üì° Connecting to Mainnet Ethereum\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\nconst scaffoldEthProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n  : null;\nconst poktMainnetProvider = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\n      \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n    )\n  : null;\nconst mainnetInfura = navigator.onLine\n  ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n  : null;\n// ( ‚ö†Ô∏è Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n\n// üè† Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"üè† Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// üî≠ block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n\n/* Web3 modal helps us \"connect\" external wallets: */\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    },\n  },\n});\n\nfunction App() {\n  const mainnetProvider =\n    poktMainnetProvider && poktMainnetProvider._isProvider\n      ? poktMainnetProvider\n      : scaffoldEthProvider && scaffoldEthProvider._network\n      ? scaffoldEthProvider\n      : mainnetInfura;\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* üíµ This hook will get the price of ETH from ü¶Ñ Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n\n  /* üî• This hook will get the price of Gas from ‚õΩÔ∏è EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from ü¶ä Metamask or if you don't have it then instantly generate a üî• burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out üîóeth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // üèó scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different üõ∞ providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  const contractConfig = useContractConfig();\n\n  // Load in your local üìù contract and read a value from it:\n  const readContracts = useContractLoader(localProvider, contractConfig);\n\n  // If you want to make üîê write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, localChainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  useOnBlock(mainnetProvider, () => {\n    console.log(`‚õì A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    \"0x34aA3F359A9D614239015126635CE7732c18fDF3\",\n  ]);\n\n  // keep track of a variable from the contract in the local React state:\n  const balance = useContractReader(readContracts, \"YourCollectible\", \"balanceOf\", [address]);\n  console.log(\"ü§ó balance:\", balance);\n\n  // üìü Listen for broadcast events\n  const transferEvents = useEventListener(readContracts, \"YourCollectible\", \"Transfer\", localProvider, 1);\n  console.log(\"üìü Transfer events:\", transferEvents);\n\n  //\n  // üß† This effect will update yourCollectibles by polling when your balance changes\n  //\n  const yourBalance = balance && balance.toNumber && balance.toNumber();\n  const [yourCollectibles, setYourCollectibles] = useState();\n\n  useEffect(() => {\n    const updateYourCollectibles = async () => {\n      const collectibleUpdate = [];\n      for (let tokenIndex = 0; tokenIndex < balance; tokenIndex++) {\n        try {\n          console.log(\"GEtting token index\", tokenIndex);\n          const tokenId = await readContracts.YourCollectible.tokenOfOwnerByIndex(address, tokenIndex);\n          console.log(\"tokenId\", tokenId);\n          const tokenURI = await readContracts.YourCollectible.tokenURI(tokenId);\n          console.log(\"tokenURI\", tokenURI);\n\n          const ipfsHash = tokenURI.replace(\"https://ipfs.io/ipfs/\", \"\");\n          console.log(\"ipfsHash\", ipfsHash);\n\n          const jsonManifestBuffer = await getFromIPFS(ipfsHash);\n\n          try {\n            const jsonManifest = JSON.parse(jsonManifestBuffer.toString());\n            console.log(\"jsonManifest\", jsonManifest);\n            collectibleUpdate.push({ id: tokenId, uri: tokenURI, owner: address, ...jsonManifest });\n          } catch (e) {\n            console.log(e);\n          }\n        } catch (e) {\n          console.log(e);\n        }\n      }\n      setYourCollectibles(collectibleUpdate);\n    };\n    updateYourCollectibles();\n  }, [address, yourBalance]);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"üè∑ Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  // üß´ DEBUG üë®üèª‚Äçüî¨\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ üèó scaffold-eth _____________________________________\");\n      console.log(\"üåé mainnetProvider\", mainnetProvider);\n      console.log(\"üè† localChainId\", localChainId);\n      console.log(\"üë©‚Äçüíº selected address:\", address);\n      console.log(\"üïµüèª‚Äç‚ôÇÔ∏è selectedChainId:\", selectedChainId);\n      console.log(\"üíµ yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"üíµ yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"üìù readContracts\", readContracts);\n      console.log(\"üåç DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"üíµ yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"üîê writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"‚ö†Ô∏è Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId == 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          üí∞ Grab funds from the faucet ‚õΩÔ∏è\n        </Button>\n      </div>\n    );\n  }\n\n  const [yourJSON, setYourJSON] = useState(STARTING_JSON);\n  const [sending, setSending] = useState();\n  const [ipfsHash, setIpfsHash] = useState();\n  const [ipfsDownHash, setIpfsDownHash] = useState();\n  const [downloading, setDownloading] = useState();\n  const [ipfsContent, setIpfsContent] = useState();\n  const [transferToAddresses, setTransferToAddresses] = useState({});\n  const [minting, setMinting] = useState(false);\n  const [count, setCount] = useState(1);\n\n  // the json for the nfts\n  const json = {\n    1: {\n      description: \"It's actually a bison?\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/buffalo.jpg\",\n      name: \"Buffalo\",\n      attributes: [\n        {\n          trait_type: \"BackgroundColor\",\n          value: \"green\",\n        },\n        {\n          trait_type: \"Eyes\",\n          value: \"googly\",\n        },\n        {\n          trait_type: \"Stamina\",\n          value: 42,\n        },\n      ],\n    },\n    2: {\n      description: \"What is it so worried about?\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/zebra.jpg\",\n      name: \"Zebra\",\n      attributes: [\n        {\n          trait_type: \"BackgroundColor\",\n          value: \"blue\",\n        },\n        {\n          trait_type: \"Eyes\",\n          value: \"googly\",\n        },\n        {\n          trait_type: \"Stamina\",\n          value: 38,\n        },\n      ],\n    },\n    3: {\n      description: \"What a horn!\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/rhino.jpg\",\n      name: \"Rhino\",\n      attributes: [\n        {\n          trait_type: \"BackgroundColor\",\n          value: \"pink\",\n        },\n        {\n          trait_type: \"Eyes\",\n          value: \"googly\",\n        },\n        {\n          trait_type: \"Stamina\",\n          value: 22,\n        },\n      ],\n    },\n    4: {\n      description: \"Is that an underbyte?\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/fish.jpg\",\n      name: \"Fish\",\n      attributes: [\n        {\n          trait_type: \"BackgroundColor\",\n          value: \"blue\",\n        },\n        {\n          trait_type: \"Eyes\",\n          value: \"googly\",\n        },\n        {\n          trait_type: \"Stamina\",\n          value: 15,\n        },\n      ],\n    },\n    5: {\n      description: \"So delicate.\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/flamingo.jpg\",\n      name: \"Flamingo\",\n      attributes: [\n        {\n          trait_type: \"BackgroundColor\",\n          value: \"black\",\n        },\n        {\n          trait_type: \"Eyes\",\n          value: \"googly\",\n        },\n        {\n          trait_type: \"Stamina\",\n          value: 6,\n        },\n      ],\n    },\n    6: {\n      description: \"Raaaar!\",\n      external_url: \"https://austingriffith.com/portfolio/paintings/\", // <-- this can link to a page for the specific file too\n      image: \"https://austingriffith.com/images/paintings/godzilla.jpg\",\n      name: \"Godzilla\",\n      attributes: [\n        {\n          trait_type: \"BackgroundColor\",\n          value: \"orange\",\n        },\n        {\n          trait_type: \"Eyes\",\n          value: \"googly\",\n        },\n        {\n          trait_type: \"Stamina\",\n          value: 99,\n        },\n      ],\n    },\n  };\n\n  const mintItem = async () => {\n    // upload to ipfs\n    const uploaded = await ipfs.add(JSON.stringify(json[count]));\n    setCount(count + 1);\n    console.log(\"Uploaded Hash: \", uploaded);\n    const result = tx(\n      writeContracts &&\n        writeContracts.YourCollectible &&\n        writeContracts.YourCollectible.mintItem(address, uploaded.path),\n      update => {\n        console.log(\"üì° Transaction Update:\", update);\n        if (update && (update.status === \"confirmed\" || update.status === 1)) {\n          console.log(\" üçæ Transaction \" + update.hash + \" finished!\");\n          console.log(\n            \" ‚õΩÔ∏è \" +\n              update.gasUsed +\n              \"/\" +\n              (update.gasLimit || update.gas) +\n              \" @ \" +\n              parseFloat(update.gasPrice) / 1000000000 +\n              \" gwei\",\n          );\n        }\n      },\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      {/* ‚úèÔ∏è Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              YourCollectibles\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/transfers\">\n            <Link\n              onClick={() => {\n                setRoute(\"/transfers\");\n              }}\n              to=\"/transfers\"\n            >\n              Transfers\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsup\">\n            <Link\n              onClick={() => {\n                setRoute(\"/ipfsup\");\n              }}\n              to=\"/ipfsup\"\n            >\n              IPFS Upload\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/ipfsdown\">\n            <Link\n              onClick={() => {\n                setRoute(\"/ipfsdown\");\n              }}\n              to=\"/ipfsdown\"\n            >\n              IPFS Download\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"/debugcontracts\">\n            <Link\n              onClick={() => {\n                setRoute(\"/debugcontracts\");\n              }}\n              to=\"/debugcontracts\"\n            >\n              Debug Contracts\n            </Link>\n          </Menu.Item>\n        </Menu>\n        <Switch>\n          <Route exact path=\"/\">\n            <div style={{ width: 640, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n              <Button\n                disabled={minting}\n                shape=\"round\"\n                size=\"large\"\n                onClick={() => {\n                  mintItem();\n                }}\n              >\n                MINT NFT\n              </Button>\n            </div>\n            <div style={{ width: 640, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n              <List\n                bordered\n                dataSource={yourCollectibles}\n                renderItem={item => {\n                  const id = item.id.toNumber();\n                  return (\n                    <List.Item key={id + \"_\" + item.uri + \"_\" + item.owner}>\n                      <Card\n                        title={\n                          <div>\n                            <span style={{ fontSize: 16, marginRight: 8 }}>#{id}</span> {item.name}\n                          </div>\n                        }\n                      >\n                        <div>\n                          <img src={item.image} style={{ maxWidth: 150 }} />\n                        </div>\n                        <div>{item.description}</div>\n                      </Card>\n\n                      <div>\n                        owner:{\" \"}\n                        <Address\n                          address={item.owner}\n                          ensProvider={mainnetProvider}\n                          blockExplorer={blockExplorer}\n                          fontSize={16}\n                        />\n                        <AddressInput\n                          ensProvider={mainnetProvider}\n                          placeholder=\"transfer to address\"\n                          value={transferToAddresses[id]}\n                          onChange={newValue => {\n                            const update = {};\n                            update[id] = newValue;\n                            setTransferToAddresses({ ...transferToAddresses, ...update });\n                          }}\n                        />\n                        <Button\n                          onClick={() => {\n                            console.log(\"writeContracts\", writeContracts);\n                            tx(writeContracts.YourCollectible.transferFrom(address, transferToAddresses[id], id));\n                          }}\n                        >\n                          Transfer\n                        </Button>\n                      </div>\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/transfers\">\n            <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n              <List\n                bordered\n                dataSource={transferEvents}\n                renderItem={item => {\n                  return (\n                    <List.Item key={item[0] + \"_\" + item[1] + \"_\" + item.blockNumber + \"_\" + item.args[2].toNumber()}>\n                      <span style={{ fontSize: 16, marginRight: 8 }}>#{item.args[2].toNumber()}</span>\n                      <Address address={item.args[0]} ensProvider={mainnetProvider} fontSize={16} /> =&gt;\n                      <Address address={item.args[1]} ensProvider={mainnetProvider} fontSize={16} />\n                    </List.Item>\n                  );\n                }}\n              />\n            </div>\n          </Route>\n\n          <Route path=\"/ipfsup\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\", textAlign: \"left\" }}>\n              <ReactJson\n                style={{ padding: 8 }}\n                src={yourJSON}\n                theme=\"pop\"\n                enableClipboard={false}\n                onEdit={(edit, a) => {\n                  setYourJSON(edit.updated_src);\n                }}\n                onAdd={(add, a) => {\n                  setYourJSON(add.updated_src);\n                }}\n                onDelete={(del, a) => {\n                  setYourJSON(del.updated_src);\n                }}\n              />\n            </div>\n\n            <Button\n              style={{ margin: 8 }}\n              loading={sending}\n              size=\"large\"\n              shape=\"round\"\n              type=\"primary\"\n              onClick={async () => {\n                console.log(\"UPLOADING...\", yourJSON);\n                setSending(true);\n                setIpfsHash();\n                const result = await ipfs.add(JSON.stringify(yourJSON)); // addToIPFS(JSON.stringify(yourJSON))\n                if (result && result.path) {\n                  setIpfsHash(result.path);\n                }\n                setSending(false);\n                console.log(\"RESULT:\", result);\n              }}\n            >\n              Upload to IPFS\n            </Button>\n\n            <div style={{ padding: 16, paddingBottom: 150 }}>{ipfsHash}</div>\n          </Route>\n          <Route path=\"/ipfsdown\">\n            <div style={{ paddingTop: 32, width: 740, margin: \"auto\" }}>\n              <Input\n                value={ipfsDownHash}\n                placeHolder=\"IPFS hash (like QmadqNw8zkdrrwdtPFK1pLi8PPxmkQ4pDJXY8ozHtz6tZq)\"\n                onChange={e => {\n                  setIpfsDownHash(e.target.value);\n                }}\n              />\n            </div>\n            <Button\n              style={{ margin: 8 }}\n              loading={sending}\n              size=\"large\"\n              shape=\"round\"\n              type=\"primary\"\n              onClick={async () => {\n                console.log(\"DOWNLOADING...\", ipfsDownHash);\n                setDownloading(true);\n                setIpfsContent();\n                const result = await getFromIPFS(ipfsDownHash); // addToIPFS(JSON.stringify(yourJSON))\n                if (result && result.toString) {\n                  setIpfsContent(result.toString());\n                }\n                setDownloading(false);\n              }}\n            >\n              Download from IPFS\n            </Button>\n\n            <pre style={{ padding: 16, width: 500, margin: \"auto\", paddingBottom: 150 }}>{ipfsContent}</pre>\n          </Route>\n          <Route path=\"/debugcontracts\">\n            <Contract\n              name=\"YourCollectible\"\n              signer={userSigner}\n              provider={localProvider}\n              address={address}\n              blockExplorer={blockExplorer}\n              contractConfig={contractConfig}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      <ThemeSwitch />\n\n      {/* üë®‚Äçüíº Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n      {/* üó∫ Extra UI like gas price, eth price, faucet, and support: */}\n      <div style={{ position: \"fixed\", textAlign: \"left\", left: 0, bottom: 20, padding: 10 }}>\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={8}>\n            <Ramp price={price} address={address} networks={NETWORKS} />\n          </Col>\n\n          <Col span={8} style={{ textAlign: \"center\", opacity: 0.8 }}>\n            <GasGauge gasPrice={gasPrice} />\n          </Col>\n          <Col span={8} style={{ textAlign: \"center\", opacity: 1 }}>\n            <Button\n              onClick={() => {\n                window.open(\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\");\n              }}\n              size=\"large\"\n              shape=\"round\"\n            >\n              <span style={{ marginRight: 8 }} role=\"img\" aria-label=\"support\">\n                üí¨\n              </span>\n              Support\n            </Button>\n          </Col>\n        </Row>\n\n        <Row align=\"middle\" gutter={[4, 4]}>\n          <Col span={24}>\n            {\n              /*  if the local provider has a signer, let's show the faucet:  */\n              faucetAvailable ? (\n                <Faucet localProvider={localProvider} price={price} ensProvider={mainnetProvider} />\n              ) : (\n                \"\"\n              )\n            }\n          </Col>\n        </Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}